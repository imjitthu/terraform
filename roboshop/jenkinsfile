pipeline {
    agent any

    options { disableConcurrentBuilds() }

    // tools {
    //    ansible 'ansible'
    // }

    stages {

        stage('installing roboshop components') {
            parallel { //parallal 1
                stage('installing catalogue') {
                    steps {
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'awskey', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    echo 'AWS Credentials'
                    echo 'Downloading from GITHub'
                    git 'https://github.com/imjitthu/terraform.git'
                    sh'''
                        echo 'installing catalogue server'
                        cd roboshop/catalogue
                        terraform init
                        terraform apply -auto-approve
                    ''' }  
                        }
                        }
                stage('installing cart') {
                     steps {
                            withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'awskey', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    echo 'AWS Credentials'
                    echo 'Downloading from GITHub'
                    git 'https://github.com/imjitthu/terraform.git'
                    sh'''
                        echo 'installing catalogue server'
                        cd roboshop/cart
                        terraform init
                        terraform apply -auto-approve
                    ''' }  
                        }
                        }
                stage('installing shipping') {
                    steps {
                        echo 'installing shipping'
                        sh 'sleep 1s'
                    }
                    }
                stage('installing user') {
                    steps {
                        echo 'installing user'
                        sh 'sleep 1s'
                    }
                    }
                stage('installing payment') {
                    steps {
                        echo 'installing payment'
                        sh 'sleep 1s'
                    }
                    }
                    } //parallel  1 
                    } //stage 
        stage('installing Databases') {
            parallel { //parallel 2
                stage('installing MongoDB') {
                    steps {
                       echo 'installing mongodb Server'
                       sh 'sleep 1s'   
                        }
                        }
                        
                stage('installing MySQL') {
                    steps('installing MySQL') {
                       echo 'installing mysql Server'
                       sh 'sleep 1s'
                    }
                    }                    
                    } //parallel 2
                    } //stage
        stage('installing Redis cache server') {
            steps {
                echo 'installing Redis Server'
                sh 'sleep 1s'
                    }
                    }
        stage('installing RabbitMQ server') {
            steps {
                echo 'installing RabbitMQ Server'
                sh 'sleep 1s'
                    }
                    }
        stage('installing frontend web-server') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'awskey', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                echo 'AWS Credentials'
                echo 'Downloading from GITHub'
                git 'https://github.com/imjitthu/terraform.git'
                sh'''
                    echo 'installing frontend server'
                    cd cd roboshop/frontend
                    terraform init
                    terraform apply -auto-approve
                ''' }  
                    }
                    }  
        stage('Roboshop components installed successfully') {
            steps {
                echo 'installing compononts finished'
                  }
                  }
        }
        }